apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'

def ext = rootProject.ext

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation ("com.stefattorusso.simpleconverter.utils.MyOpenClass")
}

android {
    compileSdkVersion ext.compileSdkVersion
    defaultConfig {
        applicationId ext.applicationId
        versionCode ext.versionCode
        versionName ext.versionName
        targetSdkVersion ext.targetSdkVersion
        minSdkVersion project.minSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            storeFile file('../keystore/keystore')
            storePassword 'revoluttest19'
            keyAlias = 'key0'
            keyPassword 'revoluttest19'
        }
    }
    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {

    implementation project(":domain")
    implementation project(":data")

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.core:core-ktx:$androidXVersion"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

//    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
//    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
//    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
//    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
//    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"

//    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
//    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    // https://github.com/midorikocak/currency-picker-android
    implementation 'com.github.midorikocak:currency-picker-android:1.2.1'

//    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"


    implementation 'androidx.test:core:1.2.0'
    implementation 'androidx.test:rules:1.2.0'
    implementation 'androidx.test:runner:1.2.0'
    implementation 'androidx.fragment:fragment-testing:1.2.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.1'
    testImplementation 'org.mockito:mockito-core:2.25.0'

    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'

}
